# SPDX-License-Identifier: LicenseRef-OQL-1.3
# Example environment configuration for Discord Sanitizer Bot.
# Copy to ".env" and adjust values for your environment. Do not commit real secrets.

# Discord bot token â€“ obtain from the Developer Portal and keep secret.
DISCORD_TOKEN=replace_with_your_bot_token

# Numeric Discord user ID considered the bot owner (authorizes owner-only commands).
OWNER_ID=221701506561212416

# PostgreSQL connection string. Required for persistence of settings/cooldowns.
DATABASE_URL=postgresql://bot:bot@db:5432/bot

# Application (client) ID used to generate invite links. Optional but recommended.
APPLICATION_ID=0

# Policy defaults (can be overridden per-guild via slash commands).
CHECK_LENGTH=0
MIN_NICK_LENGTH=2
MAX_NICK_LENGTH=32
PRESERVE_SPACES=true
COOLDOWN_SECONDS=30
SANITIZE_EMOJI=true
ENFORCE_BOTS=false
## Retention for per-user cooldown entries; older entries are purged automatically.
COOLDOWN_TTL_SEC=864000

# Background sweep configuration.
SWEEP_INTERVAL_SEC=60
SWEEP_BATCH=256

# Whether the bot should DM the owner when it joins or leaves a guild.
# Set to false to disable owner notifications for these events.
DM_OWNER_ON_GUILD_EVENTS=true

# Global per-user command cooldown (in seconds). Set to 0 to disable.
# Owner and bot admins bypass this cooldown.
COMMAND_COOLDOWN_SECONDS=2

# Telemetry (privacy-respecting census)
# Enabled by default; disable by setting opt-out to true.
# Preferred flag to disable the census entirely (1/true/yes/on):
NNSB_TELEMETRY_OPTOUT=0
# Alternative opt-out variable (also supported):
TELEMETRY_OPTOUT=0
# Override the telemetry endpoint (leave unset to use the default):
# TELEMETRY_ENDPOINT=https://telemetry.namelessnanashi.dev/census

# Where to store the stable (local) telemetry instance id file.
# Use a bind-mounted or named volume directory in containers for persistence.
# TELEMETRY_STATE_FILE=/app/data/.telemetry_id
# TELEMETRY_STATE_DIR=/app/data

# Log verbosity for the process (DEBUG, INFO, WARNING, ERROR).
LOG_LEVEL=INFO